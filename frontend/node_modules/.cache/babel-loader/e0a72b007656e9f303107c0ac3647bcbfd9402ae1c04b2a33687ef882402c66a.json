{"ast":null,"code":"var _jsxFileName = \"/Users/yersultan/developer/react_projects/fullstack-notes/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [editing, setEditing] = useState(false);\n  const [selectedNoteId, setSelectedNoteId] = useState(null);\n  // Dummy notes\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/notes');\n        const notesFetched = await response.json();\n        console.log(notesFetched);\n        setNotes(notesFetched);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleNoteClick = id => {\n    const selectedNote = notes.find(note => note.id === id); // Find the note by ID\n\n    if (selectedNote) {\n      setSelectedNoteId(id);\n      setEditing(true);\n      setTitle(selectedNote.title);\n      setDescription(selectedNote.content);\n    }\n  };\n  const handleEditNote = async () => {\n    if (!selectedNoteId) return; // Prevent errors if no note is selected\n\n    try {\n      const response = await fetch(`http://localhost:5001/api/notes/${selectedNoteId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: title,\n          content: description\n        })\n      });\n      const notesFetched = await response.json();\n      const updatedNoteList = notes.map(note => note.id === selectedNoteId ? notesFetched : note);\n      setNotes(updatedNoteList);\n      setTitle(\"\");\n      setDescription(\"\");\n      setEditing(false);\n      setSelectedNoteId(null);\n\n      // Reset input fields and exit editing mode\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleCancel = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setEditing(false);\n    setSelectedNoteId(null);\n  };\n  const handleAddNote = async event => {\n    event.preventDefault();\n    console.log(\"title: \", title);\n    console.log(\"desc: \", description);\n    try {\n      const response = await fetch(`http://localhost:5001/api/notes/`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: title,\n          content: description\n        })\n      });\n      const newNote = await response.json();\n      setNotes([...notes, newNote]);\n\n      // Clear input fields\n      setTitle('');\n      setDescription('');\n    } catch (err) {\n      console.log(err);\n    }\n    // Adding a new note\n    // const newNote: Note = {\n    //     id: notes.length + 1,\n    //     title: title,\n    //     content: description\n    // };\n  };\n  const handleDeleteNote = async (event, id) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setNotes(notes.filter(note => note.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"app-form\",\n      onSubmit: handleAddNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        type: \"text\",\n        placeholder: \"Atau\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Jazba\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-edit\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          onClick: handleEditNote,\n          children: \"Ozgertu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel\",\n          onClick: handleCancel,\n          children: \"Bas tartu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Jiberu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-item\",\n        onClick: () => handleNoteClick(note.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => handleDeleteNote(event, note.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"lK0T/EfI6Lat4tNzZj+bW3lYix0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","title","setTitle","description","setDescription","editing","setEditing","selectedNoteId","setSelectedNoteId","notes","setNotes","fetchNotes","response","fetch","notesFetched","json","console","log","err","handleNoteClick","id","selectedNote","find","note","content","handleEditNote","method","headers","body","JSON","stringify","updatedNoteList","map","handleCancel","handleAddNote","event","preventDefault","newNote","handleDeleteNote","stopPropagation","filter","className","children","onSubmit","value","onChange","e","target","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/yersultan/developer/react_projects/fullstack-notes/frontend/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\n\ntype Note = {\n    id: number;\n    title: string;\n    content: string;\n}\n\nfunction App() {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [editing, setEditing] = useState(false);\n    const [selectedNoteId, setSelectedNoteId] = useState<number | null>(null);\n    // Dummy notes\n    const [notes, setNotes] = useState<Note[]>([]);\n\n    useEffect(() => {\n        const fetchNotes = async () => {\n            try {\n                const response = await fetch('http://localhost:5001/api/notes');\n                const notesFetched: Note[] = await response.json();\n                console.log(notesFetched);\n                setNotes(notesFetched);\n            } catch (err) {\n                console.log(err);\n            }\n\n        }\n\n        fetchNotes();\n    }, [])\n\n\n    const handleNoteClick = (id: number) => {\n        const selectedNote: Note | undefined = notes.find(note => note.id === id); // Find the note by ID\n\n        if (selectedNote) {\n            setSelectedNoteId(id);\n            setEditing(true);\n            setTitle(selectedNote.title);\n            setDescription(selectedNote.content);\n        }\n    }\n    const handleEditNote = async () => {\n        if (!selectedNoteId) return; // Prevent errors if no note is selected\n\n\n        try {\n            const response = await fetch(`http://localhost:5001/api/notes/${selectedNoteId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    title: title,\n                    content: description,\n                })\n            });\n\n            const notesFetched = await response.json();\n\n            const updatedNoteList = notes.map((note) => note.id === selectedNoteId ? notesFetched : note);\n            setNotes(updatedNoteList);\n\n            setTitle(\"\");\n            setDescription(\"\");\n            setEditing(false);\n            setSelectedNoteId(null);\n\n            // Reset input fields and exit editing mode\n        } catch (err) {\n            console.log(err);\n        }\n\n    };\n\n    const handleCancel = () => {\n        setTitle(\"\");\n        setDescription(\"\");\n        setEditing(false);\n        setSelectedNoteId(null);\n    }\n\n    const handleAddNote = async (event: React.FormEvent) => {\n        event.preventDefault();\n        console.log(\"title: \", title);\n        console.log(\"desc: \", description);\n\n        try {\n            const response = await fetch(`http://localhost:5001/api/notes/`, {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    title: title,\n                    content: description,\n                })\n            });\n\n            const newNote = await response.json();\n\n            setNotes([...notes, newNote]);\n\n            // Clear input fields\n            setTitle('');\n            setDescription('');\n        } catch (err) {\n            console.log(err);\n        }\n        // Adding a new note\n        // const newNote: Note = {\n        //     id: notes.length + 1,\n        //     title: title,\n        //     content: description\n        // };\n\n    };\n\n    const handleDeleteNote = async (event: React.FormEvent, id: number) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        \n\n        setNotes(notes.filter((note) => note.id !== id));\n\n    }\n\n    return (\n        <div className=\"app-container\">\n            <form className=\"app-form\" onSubmit={handleAddNote}>\n                <input\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"Atau\"\n                    required\n                />\n                <textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Jazba\"\n                    rows={10}\n                    required\n                />\n\n                {\n                    editing ?\n                        <div className=\"form-edit\">\n                            <button className=\"edit\" onClick={handleEditNote}>Ozgertu</button>\n                            <button className=\"cancel\" onClick={handleCancel}>Bas tartu</button>\n                        </div>\n                        :\n                        <button type=\"submit\">Jiberu</button>\n                }\n\n\n            </form>\n\n            {/* Display Notes */}\n            <div className=\"notes-grid\">\n                {notes.map((note) => (\n                    <div key={note.id} className=\"notes-item\" onClick={() => handleNoteClick(note.id)}>\n                        <div className=\"notes-header\">\n                            <button onClick={(event) => handleDeleteNote(event, note.id)}>X</button>\n                        </div>\n                        <h2>{note.title}</h2>\n                        <p>{note.content}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}